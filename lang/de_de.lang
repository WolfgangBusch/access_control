# addon:access_control
#   package
access_control = Zugriffskontrolle
introduction   = Einführung
description    = Beschreibung
details        = Details
settings       = Konfiguration
#
#   access_allowed
ac_allowed_prohibited     = Dieser Artikel liegt im <span class="ac_error">verbotenen Bereich</span>,<br>reserviert für den Site-Administrator.
ac_allowed_access         = Zugriff nur nach einem
ac_allowed_button_title   = Login-Formular
ac_allowed_signin         = Login
ac_allowed_article        = Der Artikel
ac_allowed_protected      = liegt in einem <span class="ac_error">geschützten Bereich</span>
ac_allowed_back           = zurück
#
#   signin page
ac_signin_no_protector    = Bitte zunächst einen Bewacher-Benutzer einrichten
ac_signin_in_username_pwd = Bitte Benutzername und Passwort eingeben
ac_signin_wrong_username  = +++ falscher Benutzername
ac_signin_in_pwd          = Bitte Passwort eingeben
ac_signin_wrong_pwd       = +++ falsches Passwort
ac_signin_username        = Benutzername
ac_signin_pwd             = Passwort
ac_signin_button_in       = anmelden
ac_signin_button_off      = abmelden
ac_signin_val_off         = abmelden
ac_signin_user            = Benutzer
ac_signin_logoff          = Benutzer doch wieder
ac_signin_authenticated   = eingeloggt
ac_signin_reload          = Nun bitte die aufgerufene Seite neu laden!
#
#   documentation help
ac_help           = Dieses AddOn ermöglicht eine Zugriffskontrolle für ausgewählte Bereiche von Artikeln und/oder Mediendateien. Damit ist gemeint, dass ein Besucher im Front-End eine Authentifizierung benötigt, um bestimmte Seiten oder Mediendateien sehen zu dürfen. Auf diese Weise werden Besuchergruppen eingerichtet, die von der allgemeinen Öffentlichkeit abgegrenzt sind.<br>Der Zugriff wird über die Authentifizierung von Redaxo-Benutzern kontrolliert, denen über ihre Rollen die entsprechenden Bereiche zugeordnet sind.<br>Die erfolgte Autorisierung wird Session-basiert gespeichert.<br>Das AddOn ist komplett zweisprachig eingerichtet (deutsch, englisch).
#
#   documentation description
ac_descr_head1    = Geschützte Bereiche:
ac_descr_par1     = Die Zugriffskontrolle kann für jede beliebige Kategorie eingerichtet werden ("geschützter Bereich"). Der Schutz erstreckt sich dann auf alle Artikel, die in dieser Kategorie und in ihren Unterkategorien liegen. Ggf. muss der inhaltlich aufgebaute Kategorienbaum zugunsten des Datenschutzes umstrukturiert werden, indem schutzwürdige Artikel in einen geschützten Bereich verschoben werden.<br>Analog können vorhandene oder neue Top-Medienkategorien als geschützte Bereiche für Mediendateien angelegt werden.<br>Darüber hinaus kann bei Bedarf auch eine Kategorie als "verbotener Bereich" definiert werden. Auf diesen hat nur der Site-Administrator Lesezugriff als Besucher, wenn er im Backend eingeloggt ist.
ac_descr_head2    = Bewacher-Benutzer:
ac_descr_par2     = Die Zuordnung einer geschützten Kategorie bzw. Medienkategorie zu einem Redaxo-Benutzer ("Bewacher-Benutzer") wird im Rahmen der Redaxo-Benutzerverwaltung über entsprechende Rollen realisiert. Einem Bewacher-Benutzer können mehrere geschützte Bereiche zugeordnet werden, sowohl Kategorien als auch Medienkategorien.
ac_descr_head3    = Überprüfung der Zugriffsberechtigung:
ac_descr_par3     = Mithilfe einer AddOn-Funktion lässt sich feststellen, ob ein angeforderter Artikel öffentlich, geschützt oder verboten ist. Dies geschieht sinnvollerweise im Seiten-Template. Ggf. wird dort anstelle des Artikelinhalts ein Link auf ein Formular zur Authentifizierung angezeigt.<br>Die Überprüfung, ob eine Mediendatei öffentlich oder geschützt ist, erfolgt in der Boot-Datei. Bei fehlender Zugriffsberechtigung wird anstelle der angeforderten Mediendatei ein Standard-Fehlerbild angezeigt.
ac_descr_head4    = Authentifizierung:
ac_descr_par4     = Um auf einen geschützten Artikel oder eine geschützte Mediendatei zugreifen zu können, muss sich ein Besucher vorher durch Angabe von Login-Name und Passwort des zugehörigen Bewacher-Benutzers authentifizieren. Ein entsprechendes Formular ist verfügbar.
#
#   documentation details
ac_details_head0  = Einrichtung der Zugriffskontrolle
ac_details_par0   = Erforderlich sind die folgenden Schritte, sinnvollerweise auch in dieser Reihenfolge:
ac_details_head1  = Einrichtung von Bewacher-Benutzern in der Redaxo-Benutzerverwaltung:
ac_details_par1a  = Ein Bewacher-Benutzer wird wie ein Redakteur angelegt. Dabei ist zu beachten:
ac_details_par1b  = Er wird als inaktiv definiert, sein Passwort kann daher nur mit Admin-Rechten geändert werden.
ac_details_par1c  = Das Feld "Beschreibung" bekommt den Wert "Protector" (bzw. "Guardian" für den verbotenen Bereich).
ac_details_par1d  = Ihm wird eine Rolle zugewiesen. In dieser sind Kategorien und Top-Medienkategorien auszuwählen, die normalerweise den Verantwortungsbereich (Schreibzugriff) des Benutzers als Redakteur definieren. Hier werden sie als geschützte Bereiche interpretiert.
ac_details_par1e  = Ein Bewacher-Benutzer kann mehrere derartige Rollen erhalten. Auf diese Weise ist es möglich, dass sich geschützte Bereiche überschneiden und der Zugriff auf Kategorien von mehr als einem Bewacher kontrolliert wird.
ac_details_par1f  = Nach Einrichtung der Bewacher-Benutzer wird der <u>Schutzmechanismus durch Re-Installation des AddOns</u> aktiviert bzw. aktualisiert. Dabei werden die zugehörigen Daten im <u>AddOn-Cache</u> abgelegt (json-codiert).
ac_details_head2  = Kontrolle des Zugriffs auf die aktuelle Seite, eingefügt im Seiten-Template:
ac_details_par2a  = Der Rückgabewert der AddOn-Funktion <code>protected_or_prohibited()</code> ermöglicht die Entscheidung, ob die aktuelle Seite angezeigt werden darf oder nicht:
ac_details_par2b  = die Seite ist öffentlich, oder der Besucher ist autorisiert
ac_details_par2c  = verbotener Bereich, der Besucher ist nicht als Site-Administrator im Backend eingeloggt
ac_details_par2d  = Id des Bewacher-Benutzers der Seite (oder eine Komma-separierte Liste mehrerer Ids, jede >1),<br>der Besucher hat sich nicht als zugehöriger Bewacher-Benutzer (oder als einer dieser) authentifiziert
ac_details_par2e  = Es folgt ein schematisches PHP-Code-Schnipsel für das Seiten-Template mit Nutzung der AddOn-Funktion <code>access_allowed($uid)</code>. Diese zeigt anstelle des Seiteninhalts einen Hinweistext sowie einen Link auf ein Authentifizierungs-Formular an. Bei der Installation wird ein entsprechendes PHP-Skript im Basisverzeichnis abgelegt (Datei
ac_details_par2f  = Ein Redaxo-Redakteur hat als Besucher auch dann Lesezugriff auf seine Seiten, wenn diese in geschützten Bereichen liegen, sofern er sich im Backend eingeloggt hat.
ac_details_head3  = Kontrolle des Zugriffs auf Mediendateien über die Datei .htaccess:
ac_details_par3   = Die Kontrolle der Zugriffsberechtigung auf die Mediendateien wird in der Funktion <code>control_file($mediatype,$file)</code>, aufgerufen in der Boot-Datei, vorgenommen. Sie erfolgt auf der Basis des Media-Manager-URLs. Auf diese Weise kann die betreffende Datei und ihr Medientyp mithilfe der Funktion <tt>rex_get()</tt> ermittelt werden. Medien-URLs der Form <tt>&apos;/media/filename&apos;</tt> müssen entsprechend umgeleitet werden: