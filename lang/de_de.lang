# addon:access_control
#   package
access_control              = Zugriffskontrolle
access_control_introduction = Einführung
access_control_description  = Beschreibung
access_control_details      = Details
#   login page
access_control_login_in_username_pwd = Bitte Benutzername und Passwort eingeben
access_control_login_wrong_username  = +++ falscher Benutzername
access_control_login_in_pwd          = Bitte Passwort eingeben
access_control_login_wrong_pwd       = +++ falsches Passwort
access_control_login_username        = Benutzername
access_control_login_pwd             = Passwort
access_control_login_button_in       = anmelden
access_control_login_button_off      = abmelden
access_control_login_val_off         = abmelden
access_control_login_user            = Benutzer
access_control_login_authenticated   = erfolgreich eingeloggt
#   documentation help
access_control_help           = Dieses AddOn ermöglicht einen Zugriffsschutz für ausgewählte Bereiche von Artikeln und/oder Mediendateien. Der Zugriff wird über die Authentifizierung von Redaxo-Benutzern kontrolliert, denen die entsprechenden Kategorien zugeordnet sind. Die erfolgte Autorisierung wird Session-basiert gespeichert.<br/>Es ist nur eine einfache Rewrite-Regel erforderlich.<br/>Das AddOn ist komplett zweisprachig eingerichtet (deutsch, englisch).
#   documentation description
access_control_descr_head1    = Geschützte Bereiche:
access_control_descr_par1     = In Rollen für Redaxo-Benutzer werden normalerweise Kategorien und Medienkategorien markiert, um den Verantwortungsbereich (Schreibzugriff) eines Redakteurs für alle Artikel und Mediendateien im zugehörigen Pfad festzulegen. In diesem AddOn können entsprechend definierte Kategorien und Top-Medienkategorien als "geschützte Bereiche" interpretiert werden, auf die Besucher erst nach Authentifizierung im Frontend mit Name und Passwort des zugehörigen Redaxo-Benutzers Lesezugriff erhalten.
access_control_descr_head2    = Bewacher-Benutzer:
access_control_descr_par2     = Redaxo-Benutzer mit solchen Rollen können als "Bewacher-Benutzer" für ihre zugehörigen Bereiche eingerichtet werden. Auf diese Weise kann auch eine Kategorie festgelegt werden, in deren Pfad nur der im Backend eingeloggte Site-Administrator Lesezugriff als Besucher hat ("verbotener Bereich").<br/>Im Unterschied zu Redakteuren ist ein Bewacher-Benutzer als inaktiv zu definieren, und das Feld "Beschreibung" muss den Wert "Protector" bekommen, im Falle des Bewachers für den verbotenen Bereich den Wert "Guardian".<br/>Ein im Backend eingeloggter Redaxo-Redakteur hat als Besucher auch dann Lesezugriff auf seine Seiten, wenn diese in geschützten Bereichen liegen.
access_control_descr_head3    = Überprüfung der Zugriffsberechtigung:
access_control_descr_par3     = Ob ein angeforderter Artikel öffentlich, geschützt oder verboten ist, kann mithilfe einer AddOn-Funktion festgestellt werden, sinnvollerweise im Seiten-Template. Dort kann ggf. ein Hinweis oder ein Link auf eine Login-Seite anstelle des Artikelinhalts angezeigt werden. Die Überprüfung, ob eine Mediendatei öffentlich oder geschützt ist, erfolgt in der Boot-Datei. Bei fehlender Zugriffsberechtigung wird anstelle der angeforderten Mediendatei ein Standard-Fehlerbild angezeigt.
#   documentation details
access_control_details_head1  = Anmeldeverfahren für Bewacher-Benutzer:
access_control_details_par1   = Es ist eine Formularseite anzulegen, die nur den Aufruf einer AddOn-Funktion zur Anmeldung eines Bewacher-Benutzers enthält. Die Id des jeweiligen Bewachers ($uid) wird der Seite mittels URL-Parameter "uid=$uid" übergeben. Die Funktion überprüft das Passwort in verschlüsselter Form, speichert im Erfolgsfalle eine Session-Variable ab und gibt die Id des Bewachers zurück.
access_control_details_head2  = Kontrolle des Zugriffs auf die aktuelle Seite:
access_control_details_par2   = Der ganzzahlige Rückgabewert einer AddOn-Funktion ermöglicht die Entscheidung, ob die aktuelle Seite angezeigt werden darf (0) oder nicht (1,2,3,...):
access_control_details_par2a  = =0: die Seite ist öffentlich, oder der Besucher ist autorisiert<br/>=1: verbotener Bereich, der Besucher ist nicht als Site-Administrator eingeloggt<br/>>1: (= Id des Bewacher-Benutzers der Seite) der Besucher hat sich nicht authentifiziert
access_control_details_par2b  = Es folgt ein schematisches PHP-Code-Schnipsel für ein Seiten-Template, um ggf. einen entsprechenden Hinweis oder einen Link auf die Login-Seite anstelle des Artikelinhalts anzuzeigen:
access_control_details_head3  = Adressumleitung der Mediendateien:
access_control_details_par3   = Auf diese Weise ist in allen Medienreferenzen die betreffende Datei mittels rex_request-Funktionen erfassbar, und die Zugriffsberechtigung kann schon in der Boot-Datei kontrolliert werden.
