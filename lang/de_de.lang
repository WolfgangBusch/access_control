# addon:access_control
#   package
access_control              = Zugriffskontrolle
access_control_introduction = Einführung
access_control_description  = Beschreibung
access_control_details      = Details
#
#   signin page
access_control_signin_no_protector    = Bitte zunächst einen Bewacher-Benutzer einrichten
access_control_signin_in_username_pwd = Bitte Benutzername und Passwort eingeben
access_control_signin_wrong_username  = +++ falscher Benutzername
access_control_signin_in_pwd          = Bitte Passwort eingeben
access_control_signin_wrong_pwd       = +++ falsches Passwort
access_control_signin_username        = Benutzername
access_control_signin_pwd             = Passwort
access_control_signin_button_in       = anmelden
access_control_signin_button_off      = abmelden
access_control_signin_val_off         = abmelden
access_control_signin_user            = Benutzer
access_control_signin_authenticated   = eingeloggt
#
#   documentation help
access_control_help           = Dieses AddOn ermöglicht eine Zugriffskontrolle für ausgewählte Bereiche von Artikeln und/oder Mediendateien. Damit ist gemeint, dass ein Besucher im Front-End eine Authentifizierung benötigt, um bestimmte Seiten oder Mediendateien sehen zu dürfen. Auf diese Weise werden Besuchergruppen eingerichtet, die von der allgemeinen Öffentlichkeit abgegrenzt sind.<br>Der Zugriff wird über die Authentifizierung von Redaxo-Benutzern kontrolliert, denen über ihre Rollen die entsprechenden Bereiche zugeordnet sind.<br>Die erfolgte Autorisierung wird Session-basiert gespeichert.<br>Das AddOn ist komplett zweisprachig eingerichtet (deutsch, englisch).
#
#   documentation description
access_control_descr_head1    = Geschützte Bereiche:
access_control_descr_par1     = Die Zugriffskontrolle kann für jede beliebige Kategorie eingerichtet werden ("geschützter Bereich"). Der Schutz erstreckt sich dann auf alle Artikel, die in dieser Kategorie und in ihren Unterkategorien liegen. Ggf. muss der inhaltlich aufgebaute Kategorienbaum zugunsten des Datenschutzes umstrukturiert werden, indem schutzwürdige Artikel in einen geschützten Bereich verschoben werden.<br>Analog können vorhandene oder neue Top-Medienkategorien als geschützte Bereiche für Mediendateien angelegt werden. - Auch Mediendateien in Unterordnern des Medienordners können auf diese Weise geschützt werden. Dazu wird für jeden Top-Unterordner des Medienordners automatisch eine Top-Medienkategorie erzeugt.<br>Darüber hinaus kann bei Bedarf auch eine Kategorie als "verbotener Bereich" definiert werden. Auf diesen hat nur der Site-Administrator Lesezugriff als Besucher, wenn er im Backend eingeloggt ist.
access_control_descr_head2    = Bewacher-Benutzer:
access_control_descr_par2     = Die Zuordnung einer geschützten Kategorie bzw. Medienkategorie zu einem Redaxo-Benutzer ("Bewacher-Benutzer") wird im Rahmen der Redaxo-Benutzerverwaltung über entsprechende Rollen realisiert. Einem Bewacher-Benutzer können mehrere geschützte Bereiche zugeordnet werden, sowohl Kategorien als auch Medienkategorien.
access_control_descr_head3    = Überprüfung der Zugriffsberechtigung:
access_control_descr_par3     = Ob ein angeforderter Artikel öffentlich, geschützt oder verboten ist, kann mithilfe einer AddOn-Funktion festgestellt werden, sinnvollerweise im Seiten-Template. Dort kann ggf. ein Hinweis oder ein Link auf die Login-Seite anstelle des Artikelinhalts angezeigt werden. Ein exemplarischer PHP-Code-Schnipsel ist verfügbar.<br>Die Überprüfung, ob eine Mediendatei öffentlich oder geschützt ist, erfolgt in der Boot-Datei. Bei fehlender Zugriffsberechtigung wird anstelle der angeforderten Mediendatei ein Standard-Fehlerbild angezeigt.
access_control_descr_head4    = Login-Seite:
access_control_descr_par4     = Um auf einen geschützten Artikel oder eine geschützte Mediendatei zugreifen zu können, muss sich ein Besucher vorher durch Angabe des Login-Namens und des zugehörigen Passworts eines Bewacher-Benutzers authentifizieren. Ein Artikel mit Login-Formular kann an passender Stelle als PHP-Einzeiler angelegt werden.
#
#   documentation details
access_control_details_head0  = Einrichtung der Zugriffskontrolle
access_control_details_par0   = Erforderlich sind die folgenden Schritte, sinnvollerweise auch in dieser Reihenfolge:
access_control_details_head1  = Einrichtung von Bewacher-Benutzern in der Redaxo-Benutzerverwaltung:
access_control_details_par1a  = Ein Bewacher-Benutzer wird wie ein Redakteur angelegt:
access_control_details_par1b  = Er wird als inaktiv definiert, sein Passwort kann daher nur mit Admin-Rechten geändert werden.
access_control_details_par1c  = Das Feld "Beschreibung" bekommt den Wert "Protector" (bzw. "Guardian" für den verbotenen Bereich).
access_control_details_par1d  = Ihm wird eine Rolle zugewiesen. In dieser sind Kategorien und Top-Medienkategorien auszuwählen, die normalerweise den Verantwortungsbereich (Schreibzugriff) des Benutzers als Redakteur definieren. Hier werden sie als geschützte Bereiche interpretiert.
access_control_details_par1e  = Ein Bewacher-Benutzer kann mehrere derartige Rollen erhalten. Auf diese Weise ist es möglich, dass sich geschützte Bereiche überschneiden und der Zugriff auf Kategorien von mehr als einem Bewacher kontrolliert wird.
access_control_details_par1f  = Nach Einrichtung der Bewacher-Benutzer wird der <u>Schutzmechanismus durch Re-Installation des AddOns</u> aktiviert bzw. aktualisiert. Dabei werden die zugehörigen Daten im <u>AddOn-Cache</u> abgelegt (json-codiert).
access_control_details_head2  = Kontrolle des Zugriffs auf die aktuelle Seite, eingefügt im Seiten-Template:
access_control_details_par2a  = Der Rückgabewert der AddOn-Funktion <code>protected_or_prohibited()</code> ermöglicht die Entscheidung, ob die aktuelle Seite angezeigt werden darf oder nicht:
access_control_details_par2b  = die Seite ist öffentlich, oder der Besucher ist autorisiert
access_control_details_par2c  = verbotener Bereich, der Besucher ist nicht als Site-Administrator im Backend eingeloggt
access_control_details_par2d  = Id des Bewacher-Benutzers der Seite (oder eine Komma-separierte Liste mehrerer Ids, jede >1),<br>der Besucher hat sich nicht authentifiziert
access_control_details_par2e  = Es folgt ein schematisches PHP-Code-Schnipsel für das Seiten-Template, um ggf. einen entsprechenden Hinweis oder einen Link auf eine Login-Seite anstelle des Artikelinhalts anzuzeigen:
access_control_details_par2f  = Ein Redaxo-Redakteur hat als Besucher auch dann Lesezugriff auf seine Seiten, wenn diese in geschützten Bereichen liegen, sofern er sich im Backend eingeloggt hat.
access_control_details_head3  = Kontrolle des Zugriffs auf Mediendateien über die Datei .htaccess:
access_control_details_par3   = Die Kontrolle der Zugriffsberechtigung auf die Mediendateien wird in der Funktion <code>control_file($mediatype,$file)</code>, aufgerufen in der Boot-Datei, vorgenommen. Sie erfolgt auf der Basis des Media-Manager-URLs. Auf diese Weise kann die betreffende Datei und ihr Medientyp mithilfe der Funktion <tt>rex_get()</tt> ermittelt werden. Medien-URLs der Form <tt>&apos;/media/filename&apos;</tt> müssen entsprechend umgeleitet werden:
access_control_details_head4  = Artikel mit einem Anmeldeverfahren für Besucher:
access_control_details_par4a  = Es ist ein Artikel anzulegen, der nur den Aufruf der AddOn-Funktion <code>login_page()</code> enthält. Die Seite zeigt ein Eingabeformular für Benutzername und Passwort eines Bewacher-Benutzers an.
access_control_details_par4b  = Die Login-Seite wird mit einem URL-Parameter <tt>uid=$uidlist</tt> aufgerufen. <tt>$uidlist</tt> ist eine Komma-separierte Liste der Ids von Bewacher-Benutzern, wie sie als Rückgabewerte der Funktion <tt>protected_or_prohibited()</tt> auftreten, siehe oben. Mittels jedem der Benutzer der Liste kann sich der Besucher authentifizieren. Ein leerer oder fehlender Parameter entspricht einer Liste aller eingerichteten Bewacher-Benutzer.
access_control_details_par4c  = Die Funktion überprüft den Login-Namen des Bewacher-Benutzers sowie dessen Passwort (in verschlüsselter Form). Im Erfolgsfalle speichert sie die für die Zugriffskontrolle notwendigen Daten in einem <u>Session-Array</u> ab und gibt die Id des eingegebenen Bewachers zurück. Andernfalls wird die eingelesene Id-Liste zurück gegeben. Der Rückgabewert kann ggf. in Eigenregie weiter ausgewertet werden.
access_control_details_par4d  = Hat sich ein Besucher auf diese Weise eingeloggt, zeigt ein erneuter Aufruf der Login-Seite zunächst nur einen Abmelden-Button. Nach erfolgter Abmeldung wird ein neues Authentifizierungsformular angezeigt; der URL-Parameter der Seite bleibt unverändert.
access_control_details_head5  = Einrichtung von Medientypen für Unterordner des Medienordners:
access_control_details_par5   = Für alle Unterordner des Medienordners müssen Medientypen mit dem Effekt "mediapath" eingerichtet werden, damit die dort liegenden Mediendateien mit dem Media-Manager-URL adressiert werden können. Durch den ersten Aufruf einer Mediendatei wird automatisch eine Top-Medienkategorie namens "ZZ:ordnername" erzeugt ("ordnername" = Name des Top-Unterordners des Medienordners, in dessen Pfad die Mediendatei liegt). Wird diese Kategorie als geschützter Bereich definiert, gilt der Schutz für alle Mediendateien im Pfad dieses Top-Medienunterordners.